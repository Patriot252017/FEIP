version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/project
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - symfony-network

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - ./:/var/www/project
    networks:
      - symfony-network
    environment:
      DATABASE_URL: "mysql://ChangeMe!!!:ChangeMe!!!@mysql:3306/app_db?serverVersion=8.0"

  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ChangeMe!!!
      MYSQL_DATABASE: app_db
      MYSQL_USER: ChangeMe!!!
      MYSQL_PASSWORD: ChangeMe!!!
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - symfony-network

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

networks:
  symfony-network:
    driver: bridge

volumes:
  mysql_data:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
