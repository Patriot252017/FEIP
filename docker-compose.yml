version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./:/var/www/project
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - ${NETWORK_NAME}
    depends_on:
      - php

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - ./:/var/www/project
    networks:
      - ${NETWORK_NAME}
    environment:
      APP_ENV: ${APP_ENV}
      DATABASE_URL: "mysql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?serverVersion=${DB_VERSION}"
    depends_on:
      mysql:
        condition: service_healthy

  mysql:
    image: mysql:${DB_VERSION}
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - ${NETWORK_NAME}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  ${NETWORK_NAME}:
    driver: bridge

volumes:
  mysql_data: